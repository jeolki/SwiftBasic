/* 스위프트 처음 시작하기 */

import Swift

//MARK: 기본 명명 규칙
/*
    변수, 상수, 함수, 메서드, 타입 등의 이름은 유니코드에서
    지원하는 어떤 문자(한글, 한자, 영문, 숫자, 이모티콘 등등)라도
    사용할 수 있습니다
    
    예외)
    - 스위트프에서 미리 정한 예약어 또는 키워드
    - 해당 코드 범위 내에서 미리 사용되는 기존 이름과 동일한 이름
    - 연산자로 사용될 수 있는 기호(+, -, *, /)
    - 숫자로 시작하는 이름
    - 공백이 포함되는 이름
    
    함수, 메서드, 인스턴스 이름은 첫 글자를 소문자로 사용하는 소문자 카멜케이스를 사용합니다.
    클래스, 구조체, 익스텐션, 프로토콜, 열거형 이름은 타입의 이름이기 때문에 첫 글자를 대문자로 사용하는 카멜케이스를 사용합니다.
    대소문자를 구별합니다.
*/


//MARK: 예약어와 키워드
/*
    예약어 : 프로그래밍 언어에서 미리 사용하기로 약속한 단어, 식별자로 사용할 수 없는 단어
    키워드 : 프로그래밍 언어 문법의 일부, 특별한 의미가 있는 단어
    * 스위프트의 키워드는 대부분 예약어 입니다. 일부 예약어의 경우에는 강세표(`)를 사용하여 이름으로 사용할 수 있습니다.
*/

//MARK: 스위프트에서 세미콜론
/*
    스위프트에서 명령 구문 뒤에 세미콜론을 붙이는 것은 선택 사항입니다.
*/


//MARK: 콘솔 로그
/*
    프로그램에서 로그란 애플리케이션의 상태 또는 애플리케이션 내부 로직의 흐름을 관찰할 수 있도록 출력한 정보를 의미합니다.
    콘솔 로그(Console Log)는 디버깅 중 디버깅 콘솔에 보여줄 로그를 뜻힙니다.
    스위프트 에서는 print() 또는 dump() 함수를 사용하여 콘솔 로그를 출력할 수 있습니다.
*/

//MARK: print()와 dump() 함수
/*
    - print() : 디버깅 콘솔에 간략한 정보를 출력, 인스턴스의 description 프로퍼티에 해당하는 내용 출력
    - dump() : 조금 더 자세한 정보를 출력, 인스턴스의 자세한 내부 콘텐츠까지 출력
*/

struct BasicInformation {
    let name: String
    var age: Int
}

var myInfo: BasicInformation = BasicInformation(name: "willer", age: 99)

class Person {
    var height: Float = 0.0
    var weight: Float = 0.0
}

let willer: Person = Person()
willer.height = 180
willer.weight = 70

print(myInfo) // BasicInformation(name: "willer" , age: 99)
dump(myInfo)
/*
    BasicInformation
    - name: "willer"
    - age: 99
*/

print(willer) // Person

dump(willer)
/*
    Person
    - height: 180
    - weight: 70
*/

//MARK: 문자열 보간법
/*
    문자열 보간법은 변수 또는 상수 등의 값을 문자열 내에 나타내고 싶을 때 사용합니다
    문자열 내에 \(변수나 상수)의 형태로 표기하면 이를 문자열로 치환해서 넣습니다.
*/

//MARK: 주석
/*
    주석은 프로그램 소스 코드에 정보를 남기는 목적으로 사용합니다. 주로 코드를 다시 봤을 때 필요한 중요 메모나
    다름 프로그래머에세 설명하기 위한 메모 등을 주석으로 남깁니다.
 
    퀵헬프 : option + click
*/

// 한줄 주석
/*
    여러줄 주석
*/

/*
/*
// 충접 주석
*/
*/

//MARK: 마크업 문법을 활용한 문서화 주석
///  마크업 한줄 주석
/**
 마크업 여러줄 주석
 마크업  형식에 따라 주석을 작성하면 퀵헬프를 통해 그 내용을 확인할 수 있습니다.
*/
